#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service=$app --action="stop" --log_path=systemd --wait_until="Stopped $app"

if ynh_compare_current_package_version --comparison gt --version "1.1.1~ynh1"; then
    pkill -u "$app" || true
fi

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

if [ -n "${psql_db:-}" ]; then
    ynh_app_setting_delete --key=psql_db
fi

if [[ -z "${instance_name:-}" ]]; then
    instance_name="$name"
    ynh_app_setting_set --app="$app" --key=instance_name --value="$instance_name"
    ynh_app_setting_delete --app="$app" --key=name
fi

# Close a port
if yunohost firewall list | grep -q "\- $port$"; then
    ynh_script_progression "Closing port $port..."
    ynh_hide_warnings yunohost firewall disallow TCP "$port"
fi

# Remove old repository
ynh_safe_rm "/etc/apt/sources.list.d/erlang-solutions.list"
apt-key del A14F4FCA

# Switch to $install_dir/live
if [ ! -d "$install_dir/live" ]; then
    mv "$install_dir/$app" "$install_dir/live"
fi

config="/etc/$app/config.exs"

if ynh_app_upgrading_from_version_before_or_equal_to 1.1.1~ynh1; then
    ynh_script_progression "Upgrading to OTP release..."

    # Give permission to the data_dir
    chown -R "$app":"$app" "$data_dir"

    rsync -a "$install_dir/live/uploads/" "$data_dir/uploads/"
    if [ -d "$install_dir/live/instance/static/" ]; then
        rsync -a "$install_dir/live/instance/static/" "$data_dir/static/"
    fi
    rsync -a "$install_dir/live/priv/static/emoji/" "$data_dir/static/emoji/"

    mkdir -p "/etc/$app"
    chown -R "$app" "/etc/$app"
    mv "$install_dir/live/config/prod.secret.exs" "$config"
    ynh_replace --file="$config" \
        --match="use Mix.Config" \
        --replace="import Config"
    echo "config :pleroma, :instance, static_dir: \"/home/yunohost.app/$app/static\"" >> "$config"
    echo "config :pleroma, Pleroma.Uploaders.Local, uploads: \"/home/yunohost.app/$app/uploads\"" >> "$config"

    ynh_backup_if_checksum_is_different "$config"
fi

if ynh_app_upgrading_from_version_before_or_equal_to 2.0.5~ynh1; then
    cat "../conf/ldap.exs" >> "$config"
fi

if ynh_app_upgrading_from_version_before 2.5.5~ynh2; then
    # packaging v1 did not set a shell
    usermod -s /bin/sh "$app"
fi

ynh_replace --file="$config" \
    --match="config :pleroma, configurable_from_database: false" \
    --replace="config :pleroma, configurable_from_database: true"

ynh_replace --file="$config" \
    --match='registrations_open: true' \
    --replace="registrations_open: $(boolstr "$registration")"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading source files..."

ynh_setup_source --dest_dir="$install_dir/live" --full_replace

chown -R "$app:$app" "$install_dir"

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression "Upgrading system configurations related to $app..."

if [ "$cache" -eq 1 ]; then
    ynh_config_add --template="cache.conf" --destination="/etc/nginx/conf.d/$app-cache.conf"
    cat ../conf/media.conf >> ../conf/nginx.conf
fi

ynh_config_add_nginx

ynh_config_add_systemd

yunohost service add "$app" --description="$app daemon for Pleroma"

#=================================================
# MAKE UPGRADE
#=================================================
ynh_script_progression "Making upgrade..."

ynh_hide_warnings ynh_exec_as_app -i "$install_dir/live/bin/pleroma_ctl" migrate

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression "Updating configuration..."

config="/etc/$app/config.exs"

ynh_backup_if_checksum_is_different "$config"

chmod 400 "$config"
chown "$app:$app" "$config"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service="$app" --action="start" --log_path=systemd --wait_until="Access Pleroma.Web.Endpoint"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
